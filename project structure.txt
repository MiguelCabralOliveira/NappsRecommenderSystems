    NappsRecommender/
    ├── .env                           # Variáveis de ambiente para desenvolvimento local
    ├── README.md                      # Documentação principal do projeto
    ├── requirements.txt               # Dependências principais do projeto
    │
    ├── data_loading/                  # Módulo existente para carregamento de dados
    │   ├── __init__.py
    │   ├── database/                  # Subcomponentes para carregar dados do banco
    │   ├── shopify/                   # Subcomponentes para carregar dados do Shopify
    │   ├── run_loading.py             # Script principal para execução do carregamento
    │   ├── lambda_handlers.py         # Handlers para execução em Lambda
    │   └── utils.py                   # Utilidades comuns para o carregamento
    │
    ├── preprocessing/                 # Módulo para pré-processamento de dados
    │   ├── __init__.py
    │   ├── person_processor/          # Processador de dados de pessoas
    │   │   ├── __init__.py
    │   │   ├── process_direct_features.py  # Processamento de features diretas (colunas)
    │   │   ├── process_properties_features.py  # Processamento do campo 'properties'
    │   │   └── utils.py               # Utilidades específicas para pessoas
    │   │
    │   ├── product_processor/         # Processador de dados de produtos
    │   │   ├── __init__.py
    │   │   ├── process_metafields.py  # Processamento de metafields
    │   │   ├── process_variants.py    # Processamento de variantes
    │   │   ├── process_text.py        # Processamento de campos de texto (TF-IDF)
    │   │   ├── process_tags.py        # Processamento de tags e coleções
    │   │   └── utils.py               # Utilidades específicas para produtos
    │   │
    │   ├── preprocess_person_data.py  # Orquestrador para processamento de pessoas
    │   ├── preprocess_product_data.py # Orquestrador para processamento de produtos
    │   ├── run_preprocessing.py       # Script principal para execução do pré-processamento
    │   ├── lambda_handlers.py         # Handlers para execução em Lambda
    │   └── utils.py                   # Utilidades comuns para pré-processamento
    │
    ├── training/                      # Módulo para treinamento de modelos
    │   ├── __init__.py
    │   ├── similarity/                # Algoritmos baseados em similaridade
    │   │   ├── __init__.py
    │   │   ├── weighted_knn.py        # Implementação do KNN ponderado
    │   │   ├── cosine_similarity.py   # Cálculo de similaridade de cosseno
    │   │   └── evaluation.py          # Métricas de avaliação para similaridade
    │   │
    │   ├── graph/                     # Algoritmos baseados em grafos
    │   │   ├── __init__.py
    │   │   ├── graph_builder.py       # Construção de grafos de interação
    │   │   ├── graph_features.py      # Geração de features para grafos
    │   │   └── evaluation.py          # Métricas de avaliação para modelos de grafos
    │   │
    │   ├── recommendation_combiner.py # Combinação de diferentes recomendações
    │   ├── run_training.py            # Script principal para execução do treinamento
    │   ├── lambda_handlers.py         # Handlers para execução em Lambda
    │   └── utils.py                   # Utilidades comuns para treinamento
    │
    ├── scripts/                       # Scripts para orquestração de pipelines
    │   ├── run_full_pipeline.py       # Executa todo o pipeline localmente
    │   ├── aws_lambda_deployer.py     # Script para deploy das funções Lambda
    │   ├── aws_stepfunctions_setup.py # Script para configurar Step Functions
    │   └── sagemaker_pipeline.py      # Script para configurar pipeline no SageMaker
    │
    └── results/                       # Diretório para armazenar resultados
        ├── <shop_id>/                 # Um diretório por loja
        │   ├── person_data_loaded.csv         # Dados carregados
        │   ├── person_event_data_filtered.csv # Eventos filtrados
        │   ├── person_features_processed.csv  # Features de pessoas processadas
        │   ├── products_raw.csv               # Produtos carregados
        │   ├── products_final_all_features.csv # Features de produtos processadas
        │   ├── all_recommendations.csv         # Recomendações geradas
        │   └── evaluation_metrics/            # Métricas de avaliação
        └── README.md                  # Explicação sobre os arquivos de resultados